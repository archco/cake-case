{"version":3,"file":"cake-case.js","mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;;;;;;;;;;;;ACVA,SAAgB,MAAM,CAAC,GAAW,EAAE,IAAkB;IAAlB,iCAAkB;IACpD,OAAO,GAAG,CAAC,OAAO,CAAC,6BAA6B,EAAE,KAAK,CAAC;SACvD,OAAO,CAAC,iBAAiB,EAAE,OAAO,CAAC;SACnC,OAAO,CAAC,oBAAoB,EAAE,OAAO,CAAC;SACtC,OAAO,CAAC,oBAAoB,EAAE,OAAO,CAAC;SACtC,OAAO,CAAC,YAAY,EAAE,GAAG,CAAC;SAC1B,IAAI,EAAE;SACN,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;AACzB,CAAC;AARD,wBAQC;AAED,SAAgB,KAAK,CAAC,GAAW,EAAE,IAAkB;IAAlB,iCAAkB;IACnD,OAAO,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,WAAW,EAAE,CAAC;AACzC,CAAC;AAFD,sBAEC;AAED,SAAgB,KAAK,CAAC,GAAW,EAAE,IAAkB;IAAlB,iCAAkB;IACnD,OAAO,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,WAAW,EAAE,CAAC;AACzC,CAAC;AAFD,sBAEC;AAED,SAAgB,OAAO,CAAC,GAAW,EAAE,IAAkB;IAAlB,iCAAkB;IACrD,OAAO,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC;SAC9B,GAAG,CAAC,cAAI,IAAI,WAAI,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAtC,CAAsC,CAAC;SACnD,IAAI,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;AACrC,CAAC;AAJD,0BAIC;AAED,SAAgB,KAAK,CAAC,GAAW;IAC/B,GAAG,GAAG,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;IACvB,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AAC9C,CAAC;AAHD,sBAGC;AAED,SAAgB,MAAM,CAAC,GAAW;IAChC,OAAO,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;AAC1B,CAAC;AAFD,wBAEC;AAED,SAAgB,KAAK,CAAC,GAAW;IAC/B,OAAO,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AACzB,CAAC;AAFD,sBAEC;AAED,SAAgB,KAAK,CAAC,GAAW;IAC/B,OAAO,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AACzB,CAAC;AAFD,sBAEC","sources":["webpack://CakeCase/webpack/universalModuleDefinition","webpack://CakeCase/./src/cake-case.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"CakeCase\"] = factory();\n\telse\n\t\troot[\"CakeCase\"] = factory();\n})(this, function() {\nreturn ","export function normal(str: string, fill: string = ' '): string {\n  return str.replace(/([A-Z][a-z]|[0-9][a-zA-Z])/g, ' $1')\n  .replace(/([a-z])([A-Z])/g, '$1 $2')\n  .replace(/([0-9])([a-zA-Z])/g, '$1 $2')\n  .replace(/([a-zA-Z])([0-9])/g, '$1 $2')\n  .replace(/([\\W|_]+)/g, ' ')\n  .trim()\n  .replace(/\\s+/g, fill);\n}\n\nexport function lower(str: string, fill: string = ' '): string {\n  return normal(str, fill).toLowerCase();\n}\n\nexport function upper(str: string, fill: string = ' '): string {\n  return normal(str, fill).toUpperCase();\n}\n\nexport function capital(str: string, fill: string = ' '): string {\n  return lower(str, ' ').split(' ')\n    .map(word => word[0].toUpperCase() + word.substr(1))\n    .join(' ').replace(/\\s+/g, fill);\n}\n\nexport function camel(str: string): string {\n  str = capital(str, '');\n  return str[0].toLowerCase() + str.substr(1);\n}\n\nexport function pascal(str: string): string {\n  return capital(str, '');\n}\n\nexport function kebab(str: string): string {\n  return lower(str, '-');\n}\n\nexport function snake(str: string): string {\n  return lower(str, '_');\n}\n"],"names":[],"sourceRoot":""}